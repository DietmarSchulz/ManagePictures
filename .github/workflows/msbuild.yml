name: MSBuild

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - release/*
    
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./ManagePictures/ManagePictures.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  VCPKG_ROOT: './vcpkg' 

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: run-vcpkg
      # You may pin to the exact commit or the version.
      # uses: lukka/run-vcpkg@20eed0fd06d660f05dc4028a1f9591c97d85fac4
      uses: lukka/run-vcpkg@v10.0
      with:
          # 
          vcpkgDirectory: ${{ github.workspace }}/vcpkg
          # Run the installation of package by running `vcpkg install` on the directory of the discovered 'vcpkg.json' file. Default is false.
          runVcpkgInstall: # optional
          # Specify a value to append to the cache key.
          appendedCacheKey: # optional
          # Specify the full SHA-1 hash of a Git commit (not a branch name, nor a tag!) that establishes which version of vcpkg needs to be used. When using vcpkg as a Git submodule, this input is *not* needed as implicitly specified by the submodule.
          vcpkgGitCommitId: # optional
          # Specify the URL Git repository to download vcpkg from. Defaults to https://github.com/microsoft/vcpkg.git
          vcpkgGitURL: # optional, default is https://github.com/microsoft/vcpkg.git
          # Avoid to update vcpkg (launching git) in the specified 'vcpkgDirectory'. This is useful when vcpkg is being checkout independently of the run-vcpkg action. Default is false.
          doNotUpdateVcpkg: # optional
          # Disable the automatic caching mechanism by setting it to true. Default is false.
          doNotCache: # optional
          # Disable the saving of the cache if the workflow failed.
          doNotCacheOnWorkflowFailure: # optional
          # Specify the glob expression used to discover the vcpkg.json whose content's hash is added to the cache key.
          vcpkgJsonGlob: # optional, default is **/vcpkg.json
          # Specify an array of string containing the pattenrs to be ignored when searching for the vcpkg.json file. The default value ignores the pattern '**/vcpkg/**'
          vcpkgJsonIgnores: # optional, default is ['**/vcpkg/**']
          # Specify a path to store the built packages to be cached with the GitHub cache service. Default is '<vcpkgvcpkgDirectory>/bincache'.
          binaryCachePath: # optional
          # Specify the command line to run vcpkg with. This is only useful when the input 'runVcpkgInstall' is set to true.
          runVcpkgFormatString: # optional, default is [`install`, `--recurse`, `--clean-after-build`, `--x-install-root`, `$[env.VCPKG_INSTALLED_DIR]`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`]
          # Specify which shell to be used when launching commands. 'true' means the default shell is used. 'false' means no shell is used. It also can be an absolute path and arguments of the shell to spawn commands with.
          useShell: # optional, default is true
          # Specifies a semicolon separated list of regular expressions that are used to identify log file paths in the workflow output. A regular expression must have a single capturing group, that is a single pair of parenthesis such as 'See also (.+.log)'. When a match occurs, the content of the file is written into the workflow output for disclosing its content to the user. The default regular expressions are for CMake's and vcpkg's log files.
          logCollectionRegExps: # optional, default is \s*"(.+CMakeOutput\.log)"\.\s*;\s*"(.+CMakeError\.log)"\.\s*;\s*(.+out\.log)\s*;\s+(.+err\.log)\s*;\s*(.+vcpkg.+\.log)\s*
          # Do not set nor use. It is used to get the status of the job and decide whether to save cache on the post action run at the end of the job.
          jobStatus: # optional, default is ${{ job.status }}
    
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
